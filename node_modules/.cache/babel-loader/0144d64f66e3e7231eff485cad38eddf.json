{"ast":null,"code":"var _jsxFileName = \"/Users/tanujnamdeo/Desktop/yashi/src/screens/Comparision.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Table, TableHead, TableBody, TableRow, TableCell, TableContainer, Paper, Button, Select, MenuItem, FormHelperText, FormControl, InputLabel } from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\nimport { Line } from 'react-chartjs-2';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { DateRange } from 'react-date-range';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 160\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2)\n  }\n}));\n\nconst Comparision = () => {\n  _s();\n\n  const classes = useStyles();\n  const [confirmed, setConfirmed] = useState([]);\n  const [samples, setSamples] = useState([]);\n  const [qstate, setQstate] = useState(\"\");\n  const [qdate, setQdate] = useState([{\n    startDate: new Date(),\n    endDate: null,\n    key: 'selection'\n  }]);\n\n  const getData = async () => {\n    try {\n      const confData = await axios.get(\"https://api.rootnet.in/covid19-in/stats/history\");\n      const sampData = await axios.get(\"https://api.rootnet.in/covid19-in/stats/testing/history\");\n      setConfirmed(confData.data.data);\n      setSamples(sampData.data.data);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  useEffect(() => {\n    getData();\n  }, []);\n  const allDates = [];\n  confirmed.forEach(obj => {\n    if (!allDates.some(o => o.day === obj.day)) {\n      allDates.push(obj.day);\n    }\n  });\n  const allStates = [\"Andhra Pradesh\", \"Arunachal Pradesh\", \"Assam\", \"Bihar\", \"Chhattisgarh\", \"Goa\", \"Gujarat\", \"Haryana\", \"Himachal Pradesh\", \"Jammu and Kashmir\", \"Jharkhand\", \"Karnataka\", \"Kerala\", \"Madhya Pradesh\", \"Maharashtra\", \"Manipur\", \"Meghalaya\", \"Mizoram\", \"Nagaland\", \"Odisha\", \"Punjab\", \"Rajasthan\", \"Sikkim\", \"Tamil Nadu\", \"Telangana\", \"Tripura\", \"Uttarakhand\", \"Uttar Pradesh\", \"West Bengal\", \"Andaman and Nicobar Islands\", \"Chandigarh\", \"Dadra and Nagar Haveli\", \"Daman and Diu\", \"Delhi\", \"Lakshadweep\", \"Puducherry\", \"Ladakh\"];\n  const totalConfirmed = [];\n  confirmed.forEach(obj => {\n    if (!totalConfirmed.some(o => o.summary === obj.summary)) {\n      totalConfirmed.push(obj.summary.total);\n    }\n  });\n  const totalSampled = [];\n  samples.forEach(obj => {\n    if (!totalSampled.some(o => o === obj)) {\n      totalSampled.push(obj.totalSamplesTested);\n    }\n  }); // console.log(allDates)\n\n  const state = {\n    labels: allDates,\n    datasets: [{\n      label: 'Total Confirmed',\n      fill: false,\n      backgroundColor: 'rgba(75,192,192,1)',\n      borderColor: 'rgba(255,0,0,1)',\n      pointRadius: 0,\n      data: totalConfirmed\n    }, {\n      label: 'Total Sampled tests',\n      fill: false,\n      backgroundColor: 'rgba(75,192,192,1)',\n      borderColor: 'rgba(0,255,0,1)',\n      pointRadius: 0,\n      data: totalSampled\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      id: \"contact\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"heading\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Daily statistics comparison between both the sample tests and confirmed cases\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"primary\",\n              children: \"Go Back\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 38\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Line, {\n          data: state,\n          options: {\n            legend: {\n              display: true,\n              position: 'right'\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          className: classes.formControl,\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            children: \"States\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            value: qstate,\n            onChange: e => {\n              setQstate(e.target.value);\n            },\n            children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"\",\n              children: /*#__PURE__*/_jsxDEV(\"em\", {\n                children: \"None\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 29\n            }, this), allStates.map(val => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: val,\n              children: val\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 33\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n            children: \"Filter by State\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DateRange, {\n          editableDateInputs: true,\n          onChange: item => setQdate([item.selection]),\n          moveRangeOnFirstSelection: false,\n          ranges: qdate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Line, {\n          data: state,\n          options: {\n            legend: {\n              display: true,\n              position: 'right'\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(Comparision, \"6MsXfqgdDjx0GJwCGyzil6BF+/o=\", false, function () {\n  return [useStyles];\n});\n\n_c = Comparision;\nexport default Comparision;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comparision\");","map":{"version":3,"sources":["/Users/tanujnamdeo/Desktop/yashi/src/screens/Comparision.js"],"names":["React","useEffect","useState","axios","Table","TableHead","TableBody","TableRow","TableCell","TableContainer","Paper","Button","Select","MenuItem","FormHelperText","FormControl","InputLabel","Link","Line","makeStyles","DateRange","useStyles","theme","formControl","margin","spacing","minWidth","selectEmpty","marginTop","Comparision","classes","confirmed","setConfirmed","samples","setSamples","qstate","setQstate","qdate","setQdate","startDate","Date","endDate","key","getData","confData","get","sampData","data","e","console","log","allDates","forEach","obj","some","o","day","push","allStates","totalConfirmed","summary","total","totalSampled","totalSamplesTested","state","labels","datasets","label","fill","backgroundColor","borderColor","pointRadius","legend","display","position","target","value","map","val","item","selection"],"mappings":"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","sourcesContent":["\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport {\n    Table,\n    TableHead,\n    TableBody,\n    TableRow,\n    TableCell,\n    TableContainer,\n    Paper,\n    Button,\n    Select,\n    MenuItem,\n    FormHelperText,\n    FormControl,\n    InputLabel,\n} from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\nimport { Line } from 'react-chartjs-2';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { DateRange } from 'react-date-range';\n\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 160,\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    },\n}));\n\nconst Comparision = () => {\n    const classes = useStyles();\n    const [confirmed, setConfirmed] = useState([]);\n    const [samples, setSamples] = useState([]);\n    const [qstate, setQstate] = useState(\"\");\n    const [qdate, setQdate] = useState([\n        {\n            startDate: new Date(),\n            endDate: null,\n            key: 'selection'\n        }\n    ]);\n\n    const getData = async () => {\n        try {\n            const confData = await axios.get(\n                \"https://api.rootnet.in/covid19-in/stats/history\"\n            );\n            const sampData = await axios.get(\n                \"https://api.rootnet.in/covid19-in/stats/testing/history\"\n            );\n            setConfirmed(confData.data.data);\n            setSamples(sampData.data.data);\n        } catch (e) {\n            console.log(e);\n        }\n    };\n\n    useEffect(() => {\n        getData();\n    }, []);\n\n    const allDates = [];\n    confirmed.forEach(obj => {\n        if (!allDates.some(o => o.day === obj.day)) {\n            allDates.push(obj.day)\n        }\n    });\n\n    const allStates = [\"Andhra Pradesh\",\n        \"Arunachal Pradesh\",\n        \"Assam\",\n        \"Bihar\",\n        \"Chhattisgarh\",\n        \"Goa\",\n        \"Gujarat\",\n        \"Haryana\",\n        \"Himachal Pradesh\",\n        \"Jammu and Kashmir\",\n        \"Jharkhand\",\n        \"Karnataka\",\n        \"Kerala\",\n        \"Madhya Pradesh\",\n        \"Maharashtra\",\n        \"Manipur\",\n        \"Meghalaya\",\n        \"Mizoram\",\n        \"Nagaland\",\n        \"Odisha\",\n        \"Punjab\",\n        \"Rajasthan\",\n        \"Sikkim\",\n        \"Tamil Nadu\",\n        \"Telangana\",\n        \"Tripura\",\n        \"Uttarakhand\",\n        \"Uttar Pradesh\",\n        \"West Bengal\",\n        \"Andaman and Nicobar Islands\",\n        \"Chandigarh\",\n        \"Dadra and Nagar Haveli\",\n        \"Daman and Diu\",\n        \"Delhi\",\n        \"Lakshadweep\",\n        \"Puducherry\",\n        \"Ladakh\"];\n\n\n    const totalConfirmed = [];\n    confirmed.forEach(obj => {\n        if (!totalConfirmed.some(o => o.summary === obj.summary)) {\n            totalConfirmed.push(obj.summary.total)\n        }\n    });\n\n    const totalSampled = [];\n    samples.forEach(obj => {\n        if (!totalSampled.some(o => o === obj)) {\n            totalSampled.push(obj.totalSamplesTested)\n        }\n    })\n    // console.log(allDates)\n\n    const state = {\n        labels: allDates,\n        datasets: [\n            {\n                label: 'Total Confirmed',\n                fill: false,\n                backgroundColor: 'rgba(75,192,192,1)',\n                borderColor: 'rgba(255,0,0,1)',\n                pointRadius: 0,\n                data: totalConfirmed\n            },\n            {\n                label: 'Total Sampled tests',\n                fill: false,\n                backgroundColor: 'rgba(75,192,192,1)',\n                borderColor: 'rgba(0,255,0,1)',\n                pointRadius: 0,\n                data: totalSampled\n            }\n        ]\n    }\n\n    return (\n        <>\n            <section id=\"contact\">\n                <div className=\"container\">\n                    <div className=\"heading\">\n                        <h1>Daily statistics comparison between both the sample tests and confirmed cases</h1>\n                        <Link to=\"/\"><Button variant=\"contained\" color=\"primary\">Go Back</Button></Link>\n                    </div>\n                    <Line\n                        data={state}\n                        options={{\n                            legend: {\n                                display: true,\n                                position: 'right'\n                            }\n                        }}\n                    />\n\n                    <FormControl className={classes.formControl}>\n                        <InputLabel>States</InputLabel>\n                        <Select\n                            value={qstate}\n                            onChange={(e) => { setQstate(e.target.value) }}\n                        >\n                            <MenuItem value=\"\">\n                                <em>None</em>\n                            </MenuItem>\n                            {allStates.map((val) => (\n                                <MenuItem value={val}>\n                                    {val}\n                                </MenuItem>\n                            ))}\n                        </Select>\n                        <FormHelperText>Filter by State</FormHelperText>\n                    </FormControl>\n                    <DateRange\n                        editableDateInputs={true}\n                        onChange={item => setQdate([item.selection])}\n                        moveRangeOnFirstSelection={false}\n                        ranges={qdate}\n                    />\n                    <Line\n                        data={state}\n                        options={{\n                            legend: {\n                                display: true,\n                                position: 'right'\n                            }\n                        }}\n                    />\n                </div>\n            </section>\n        </>\n    );\n};\n\nexport default Comparision;\n"]},"metadata":{},"sourceType":"module"}