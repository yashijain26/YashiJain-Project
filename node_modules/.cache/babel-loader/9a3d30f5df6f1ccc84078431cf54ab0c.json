{"ast":null,"code":"var _jsxFileName = \"/Users/tanujnamdeo/Desktop/yashi/src/screens/Medical.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Table, TableHead, TableBody, TableRow, TableCell, TableContainer, Paper, Button, Select, MenuItem, FormHelperText, FormControl } from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2)\n  }\n}));\n\nconst Medical = () => {\n  _s();\n\n  const classes = useStyles();\n  const [states, setStates] = useState([]);\n  const [q, setQ] = useState(\"\");\n\n  const getData = async () => {\n    try {\n      const data = await axios.get(\"https://api.rootnet.in/covid19-in/hospitals/medical-colleges\");\n      setStates(data.data.data.medicalColleges);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  useEffect(() => {\n    getData();\n  }, []);\n  const stateNames = [];\n  states.forEach(obj => {\n    if (!stateNames.some(o => o.state === obj.state)) {\n      stateNames.push({ ...obj\n      });\n    }\n  });\n  console.log(stateNames);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      id: \"contact\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"heading\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Medical Colleges & beds\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"primary\",\n              children: \"Go Back\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          className: classes.formControl,\n          children: [/*#__PURE__*/_jsxDEV(Select, {\n            value: q,\n            onChange: e => {\n              setQ(e.target.value);\n            },\n            children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"\",\n              children: /*#__PURE__*/_jsxDEV(\"em\", {\n                children: \"None\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 29\n            }, this), [...new Set(states)].forEach(val => console.log(val))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n            children: \"Some important helper text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n          component: Paper,\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            children: [/*#__PURE__*/_jsxDEV(TableHead, {\n              children: /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  children: \"State Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: \"Institute Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 88,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: \"City\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 89,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: \"Type\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 90,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: \"Admission Capacity\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 91,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: \"Hospital Beds\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n              children: states.map(row => /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  children: row.state\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: row.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 99,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: row.city\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 100,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: row.ownership\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 101,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: row.admissionCapacity\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 102,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: row.hospitalBeds\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 103,\n                  columnNumber: 41\n                }, this)]\n              }, row.state, true, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(Medical, \"LBAXchsIi/ow7tH68Y4WmQeNEpU=\", false, function () {\n  return [useStyles];\n});\n\n_c = Medical;\nexport default Medical;\n\nvar _c;\n\n$RefreshReg$(_c, \"Medical\");","map":{"version":3,"sources":["/Users/tanujnamdeo/Desktop/yashi/src/screens/Medical.js"],"names":["React","useEffect","useState","axios","Table","TableHead","TableBody","TableRow","TableCell","TableContainer","Paper","Button","Select","MenuItem","FormHelperText","FormControl","Link","makeStyles","useStyles","theme","formControl","margin","spacing","minWidth","selectEmpty","marginTop","Medical","classes","states","setStates","q","setQ","getData","data","get","medicalColleges","e","console","log","stateNames","forEach","obj","some","o","state","push","target","value","Set","val","map","row","name","city","ownership","admissionCapacity","hospitalBeds"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport {\n    Table,\n    TableHead,\n    TableBody,\n    TableRow,\n    TableCell,\n    TableContainer,\n    Paper,\n    Button,\n    Select,\n    MenuItem,\n    FormHelperText,\n    FormControl\n} from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    },\n}));\n\nconst Medical = () => {\n    const classes = useStyles();\n    const [states, setStates] = useState([]);\n    const [q, setQ] = useState(\"\");\n    const getData = async () => {\n        try {\n            const data = await axios.get(\n                \"https://api.rootnet.in/covid19-in/hospitals/medical-colleges\"\n            );\n            setStates(data.data.data.medicalColleges);\n        } catch (e) {\n            console.log(e);\n        }\n    };\n\n    useEffect(() => {\n        getData();\n    }, []);\n\n    const stateNames = [];\n    states.forEach(obj => {\n        if (!stateNames.some(o => o.state === obj.state)) {\n            stateNames.push({ ...obj })\n        }\n    });\n\n    console.log(stateNames)\n\n    return (\n        <>\n            <section id=\"contact\">\n                <div className=\"container\">\n                    <div className=\"heading\">\n                        <h1>Medical Colleges & beds</h1>\n                        <Link to=\"/\">\n                            <Button variant=\"contained\" color=\"primary\">\n                                Go Back\n              </Button>\n                        </Link>\n                    </div>\n                    <FormControl className={classes.formControl}>\n                        <Select\n                            value={q}\n                            onChange={(e) => { setQ(e.target.value) }}\n                        >\n                            <MenuItem value=\"\">\n                                <em>None</em>\n                            </MenuItem>\n                            {[...new Set(states)].forEach((val) => (console.log(val)))}\n                        </Select>\n                        <FormHelperText>Some important helper text</FormHelperText>\n                    </FormControl>\n                    {/* <TextField label=\"Type\" variant=\"outlined\" /> */}\n                    <TableContainer component={Paper}>\n                        <Table>\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell>State Name</TableCell>\n                                    <TableCell>Institute Name</TableCell>\n                                    <TableCell>City</TableCell>\n                                    <TableCell>Type</TableCell>\n                                    <TableCell>Admission Capacity</TableCell>\n                                    <TableCell>Hospital Beds</TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {states.map((row) => (\n                                    <TableRow key={row.state}>\n                                        <TableCell>{row.state}</TableCell>\n                                        <TableCell>{row.name}</TableCell>\n                                        <TableCell>{row.city}</TableCell>\n                                        <TableCell>{row.ownership}</TableCell>\n                                        <TableCell>{row.admissionCapacity}</TableCell>\n                                        <TableCell>{row.hospitalBeds}</TableCell>\n                                    </TableRow>\n                                ))}\n                            </TableBody>\n                        </Table>\n                    </TableContainer>\n                </div>\n            </section>\n        </>\n    );\n};\n\nexport default Medical;\n"]},"metadata":{},"sourceType":"module"}